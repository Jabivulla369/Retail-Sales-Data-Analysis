-- DATABASE EXPLORATION

-- 1. Explore All Objects In The Database
SELECT * FROM INFORMATION_SCHEMA.TABLES



-- 2. Explore All Columns In The Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers';


-- DIMENSIONS EXPLORATION

-- 1. Explore All Countries Our Customers Come From
SELECT DISTINCT country FROM gold.dim_customers;



-- 2. Explore All Product Categories "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1, 2, 3;



-- DATE EXPLORATION

-- 1. Find The Date Of The First And Last Order
SELECT
MIN (order_date) AS first_order_date,
MAX (order_date) AS last_order_date
FROM gold.fact_sales;



-- 2. How Many Years Of Sales Are Available?
SELECT
MIN (order_date) AS first_order_date,
MAX (order_date) AS last_order_date,
DATEDIFF (YEAR, MIN (order_date), MAX (order_date)) AS order_range_years
FROM gold.fact_sales;


-- 3. Find The Youngest And Oldest Customer
SELECT
MIN(birthdate) AS oldest_birthdate,
DATEDIFF(YEAR, MIN(birthdate), GETDATE()) AS oldest_age,
MAX(birthdate) AS youngest_birthdate,
DATEDIFF(YEAR, MAX(birthdate), GETDATE()) AS youngest_age
FROM gold.dim_customers;



-- MEASURES EXPLORATION

-- Generate Report That Shows All Key Metrics Of The Business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total Nr. Products', COUNT(product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total Nr. Customers', COUNT(customer_key) FROM gold.dim_customers





-- MAGNITUDE ANALYSIS

-- 1. Find The Total Customers By Countries
SELECT
country, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;



-- 2. Find The Total Customers By Gender
SELECT
gender, COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;


-- 3. Find The Total Products By Category
SELECT
category, COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC;

-- 4. What Is The Average Costs In Each Category?
SELECT
category, AVG(cost) AS avg_costs
FROM gold.dim_products
GROUP BY category
ORDER BY avg_costs DESC;


-- 5. What Is The Total Revenue Generated For Each Category?
SELECT
p.category, SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- 6. What Is The Total Revenue Generated By Each Customer?
SELECT
c.customer_key, c.first_name, c.last_name, 
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;



-- 7. What Is The Distribution Of Items Sold Across Countries?
SELECT
c.country, SUM(f.sales_amount) AS total_sold_items
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;



-- RANKING ANALYSIS

-- 1. Which 5 Products Generate The Highest Revenue?
SELECT TOP 5
p.product_name, SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC;



-- 2. What Are The 3 Worst Performing Products In Terms Of Sales?
SELECT TOP 5
p.product_name, SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_products AS p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue;



-- 3. Find The Top 10 Customers Who Have Generated The Highest Revenue?
SELECT
c.customer_key, c.first_name, c.last_name, 
SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;

-- 4. Find The 3 Customers With The Lowest Orders Placed?
SELECT TOP 3
c.customer_key, c.first_name, c.last_name, 
COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales AS f
LEFT JOIN gold.dim_customers AS c
ON c.customer_key = f.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_orders;










